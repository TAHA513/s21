
import express from 'express';
import cors from 'cors';
import { createServer } from 'http';
import { setupViteServer } from './vite.js';
import { setupRoutes } from './routes.js';
import { testConnection } from './db.js';
import { storage } from './storage.js';

async function main() {
  // ุชุฌููุฒ ุชุทุจูู Express
  const app = express();
  
  // ุชูููู CORS ูุฅุนุฏุงุฏุงุช JSON
  app.use(cors({
    origin: true,
    credentials: true
  }));
  app.use(express.json());
  app.use(express.urlencoded({ extended: true }));
  
  console.log("๐ ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู...");
  
  // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
  const dbConnected = await testConnection();
  if (!dbConnected) {
    console.error("โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุชุ ุณูุชู ูุญุงููุฉ ุฅูุดุงุก ุงูุฌุฏุงูู ุนูุฏ ุงูุทูุจ ูุงุญููุง");
  }
  
  // ุฅุนุฏุงุฏ ุทุฑู API
  await setupRoutes(app);
  console.log("โ ุชู ุชุณุฌูู ุทุฑู API ุจูุฌุงุญ");
  
  // ุฅูุดุงุก ูุถูุงู ูุฌูุฏ ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
  await storage.ensureTablesExist()
    .then(success => {
      if (success) {
        console.log("โ ุชู ุงูุชุญูู ูู ุงูุฌุฏุงูู ูุฅูุดุงุฆูุง ุจูุฌุงุญ");
      } else {
        console.error("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅูุดุงุก ุงูุฌุฏุงูู");
      }
    });
  
  // ุงุณุชุฎุฏุงู ูููุฐ 5000 ุจุฏูุงู ูู 3000 ุฃู 4000 ูุชุฌูุจ ุงูุชุนุงุฑุถ
  const port = process.env.PORT || 5000;
  
  // ุฅูุดุงุก ุฎุงุฏู HTTP
  const server = createServer(app);
  
  // ุฅุนุฏุงุฏ ุฎุงุฏู Vite ูููุงุฌูุฉ ุงูุฃูุงููุฉ
  try {
    await setupViteServer(app, server);
    console.log("โ ุชู ุฅุนุฏุงุฏ ุฎุงุฏู Vite ุจูุฌุงุญ");
  } catch (error) {
    console.error("โ ูุดู ูู ุฅุนุฏุงุฏ ุฎุงุฏู Vite:", error);
  }
  
  // ุฅููุงู ุฃู ุนูููุงุช ุณุงุจูุฉ ุนูู ููุณ ุงููููุฐ (ุฅุฌุฑุงุก ุจุฏูู)
  server.on('error', (error) => {
    if (error.code === 'EADDRINUSE') {
      console.error(`โ ุงููููุฐ ${port} ููุฏ ุงูุงุณุชุฎุฏุงู ุจุงููุนูุ ุฌุงุฑู ุงููุญุงููุฉ ุนูู ูููุฐ ุขุฎุฑ...`);
      setTimeout(() => {
        server.close();
        server.listen(port + 1, '0.0.0.0');
      }, 1000);
    } else {
      console.error(`โ ุฎุทุฃ ูู ุงูุฎุงุฏู:`, error);
    }
  });
  
  // ุจุฏุก ุงูุงุณุชูุงุน ุนูู ุงููููุฐ
  server.listen(port, '0.0.0.0', () => {
    console.log(`โ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${port}`);
    console.log(`๐ฑ ููููู ุงููุตูู ุฅูู ุงูุชุทุจูู ูู ุฎูุงู: http://0.0.0.0:${port}/`);
  });
  
  // ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุบูุฑ ุงููุชููุนุฉ
  process.on('uncaughtException', (error) => {
    console.error('โ ุฎุทุฃ ุบูุฑ ูุชููุน:', error);
  });
  
  process.on('unhandledRejection', (reason, promise) => {
    console.error('โ ูุนุฏ ุบูุฑ ูุนุงูุฌ:', reason);
  });
}

// ุชุดุบูู ุงูุฎุงุฏู
main().catch((error) => {
  console.error("โ ุฎุทุฃ ุฃุซูุงุก ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู:", error);
  process.exit(1);
});
